{"classData":[{"comment":"/**\n * @class Neo.core.Util\n * @extends Neo.core.Base\n */","meta":{"filename":"Util.mjs","lineno":3,"columnno":0,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{}},"kind":"class","name":"Util","augments":["Neo.core.Base"],"memberof":"Neo.core","longname":"Neo.core.Util","scope":"static","$longname":"Neo.core.Util","$kind":"class","id":1322,"neoClassName":"Neo.core.Util"},{"comment":"/**\n         * A regex to remove camel case syntax\n         * @member {RegExp} decamelRegEx=/([a-z])([A-Z])/g\n         * @protected\n         * @static\n         */","meta":{"filename":"Util.mjs","lineno":15,"columnno":8,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{}},"description":"A regex to remove camel case syntax","kind":"member","name":"decamelRegEx","type":{"names":["RegExp"]},"defaultvalue":"/([a-z])([A-Z])/g","access":"protected","scope":"static","longname":"decamelRegEx","$longname":"decamelRegEx","$kind":"property","id":1323,"neoClassName":"Neo.core.Util"},{"comment":"/**\n         * @member {String} className='Neo.core.Util'\n         * @protected\n         */","meta":{"filename":"Util.mjs","lineno":23,"columnno":8,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"className","type":{"names":["String"]},"defaultvalue":"'Neo.core.Util'","access":"protected","longname":"className","scope":"global","$longname":"className","$kind":"property","id":1324,"neoClassName":"Neo.core.Util"},{"comment":"/**\n         * @member {String} ntype='core-util'\n         * @protected\n         */","meta":{"filename":"Util.mjs","lineno":28,"columnno":8,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{}},"kind":"member","name":"ntype","type":{"names":["String"]},"defaultvalue":"'core-util'","access":"protected","longname":"ntype","scope":"global","$longname":"ntype","$kind":"property","id":1325,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * @param {Object} scope\n     * @param {String[]} values\n     */","meta":{"range":[752,892],"filename":"Util.mjs","lineno":35,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045739","name":"Util.bindMethods","type":"MethodDefinition","paramnames":["scope","values"]},"vars":{"":null}},"params":[{"type":{"names":["Object"]},"name":"scope"},{"type":{"names":["Array.<String>"]},"name":"values"}],"name":"bindMethods","longname":"Util.bindMethods","kind":"function","memberof":"Util","scope":"static","$longname":"Util.bindMethods","$kind":"method","id":1326,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Makes the first character of a string uppercase\n     * @param {String} string\n     * @returns {Boolean|String} Returns false for non string inputs\n     */","meta":{"range":[1068,1184],"filename":"Util.mjs","lineno":46,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045765","name":"Util.capitalize","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Makes the first character of a string uppercase","params":[{"type":{"names":["String"]},"name":"string"}],"returns":[{"type":{"names":["Boolean","String"]},"description":"Returns false for non string inputs"}],"name":"capitalize","longname":"Util.capitalize","kind":"function","memberof":"Util","scope":"static","$longname":"Util.capitalize","$kind":"method","id":1327,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Transforms a styles string into a styles object using camelcase syntax\n     * @param {String} string The styles string to parse\n     * @returns {Object} The camelcase styles object\n     */","meta":{"range":[1394,2317],"filename":"Util.mjs","lineno":55,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045789","name":"Util.createStyleObject","type":"MethodDefinition","paramnames":["string"]},"vars":{"":null}},"description":"Transforms a styles string into a styles object using camelcase syntax","params":[{"type":{"names":["String"]},"description":"The styles string to parse","name":"string"}],"returns":[{"type":{"names":["Object"]},"description":"The camelcase styles object"}],"name":"createStyleObject","longname":"Util.createStyleObject","kind":"function","memberof":"Util","scope":"static","$longname":"Util.createStyleObject","$kind":"method","id":1328,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Converts a styles object which can use camelcase syntax into a styles string\n     * @param {Object} styles The styles object\n     * @returns {String} The styles string (DOM ready)\n     */","meta":{"range":[2526,2815],"filename":"Util.mjs","lineno":90,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045887","name":"Util.createStyles","type":"MethodDefinition","paramnames":["styles"]},"vars":{"":null}},"description":"Converts a styles object which can use camelcase syntax into a styles string","params":[{"type":{"names":["Object"]},"description":"The styles object","name":"styles"}],"returns":[{"type":{"names":["String"]},"description":"The styles string (DOM ready)"}],"name":"createStyles","longname":"Util.createStyles","kind":"function","memberof":"Util","scope":"static","$longname":"Util.createStyles","$kind":"method","id":1329,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Transforms all uppercase characters of a string into lowercase.\n     * Does not touch special characters.\n     * @param {String} value The input containing uppercase characters\n     * @returns {String} The lowercase output\n     */","meta":{"range":[3067,3168],"filename":"Util.mjs","lineno":108,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045933","name":"Util.decamel","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Transforms all uppercase characters of a string into lowercase.<br />Does not touch special characters.","params":[{"type":{"names":["String"]},"description":"The input containing uppercase characters","name":"value"}],"returns":[{"type":{"names":["String"]},"description":"The lowercase output"}],"name":"decamel","longname":"Util.decamel","kind":"function","memberof":"Util","scope":"static","$longname":"Util.decamel","$kind":"method","id":1330,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is an array\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3315,3380],"filename":"Util.mjs","lineno":117,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045950","name":"Util.isArray","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is an array","params":[{"type":{"names":["Object"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isArray","longname":"Util.isArray","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isArray","$kind":"method","id":1331,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a boolean\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3528,3602],"filename":"Util.mjs","lineno":126,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045961","name":"Util.isBoolean","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is a boolean","params":[{"type":{"names":["Object"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isBoolean","longname":"Util.isBoolean","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isBoolean","$kind":"method","id":1332,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is not undefined\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[3754,3830],"filename":"Util.mjs","lineno":135,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045971","name":"Util.isDefined","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is not undefined","params":[{"type":{"names":["Object"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isDefined","longname":"Util.isDefined","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isDefined","$kind":"method","id":1333,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is an empty Array, Object or String\n     * @param {Array|Object|String} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[4014,4404],"filename":"Util.mjs","lineno":144,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100045981","name":"Util.isEmpty","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is an empty Array, Object or String","params":[{"type":{"names":["Array","Object","String"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isEmpty","longname":"Util.isEmpty","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isEmpty","$kind":"method","id":1334,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a function\n     * @param {Function} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[4555,4631],"filename":"Util.mjs","lineno":169,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100046036","name":"Util.isFunction","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is a function","params":[{"type":{"names":["function"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isFunction","longname":"Util.isFunction","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isFunction","$kind":"method","id":1335,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a number. Returns false for non-finite numbers\n     * @param {Number} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[4816,4906],"filename":"Util.mjs","lineno":178,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100046046","name":"Util.isNumber","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is a number. Returns false for non-finite numbers","params":[{"type":{"names":["Number"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isNumber","longname":"Util.isNumber","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isNumber","$kind":"method","id":1336,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is an object\n     * @param {Object} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[5054,5169],"filename":"Util.mjs","lineno":187,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100046060","name":"Util.isObject","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is an object","params":[{"type":{"names":["Object"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isObject","longname":"Util.isObject","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isObject","$kind":"method","id":1337,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Returns true if the passed value is a string\n     * @param {String} value The value to test\n     * @returns {Boolean}\n     */","meta":{"range":[5316,5388],"filename":"Util.mjs","lineno":196,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100046081","name":"Util.isString","type":"MethodDefinition","paramnames":["value"]},"vars":{"":null}},"description":"Returns true if the passed value is a string","params":[{"type":{"names":["String"]},"description":"The value to test","name":"value"}],"returns":[{"type":{"names":["Boolean"]}}],"name":"isString","longname":"Util.isString","kind":"function","memberof":"Util","scope":"static","$longname":"Util.isString","$kind":"method","id":1338,"neoClassName":"Neo.core.Util"},{"comment":"/**\n     * Converts any iterable (strings, numeric indices and a length property) into a true array\n     * @param {Object|String} iterable\n     * @param {Number} [start=0] start index\n     * @param {Number} [end=iterable.length] end index\n     * @returns {Array}\n     */","meta":{"range":[5669,5989],"filename":"Util.mjs","lineno":207,"columnno":4,"path":"/Users/Shared/github/neomjs/covid-dashboard/node_modules/neo.mjs/src/core","code":{"id":"astnode100046091","name":"Util.toArray","type":"MethodDefinition","paramnames":["iterable","start","end"]},"vars":{"":null}},"description":"Converts any iterable (strings, numeric indices and a length property) into a true array","params":[{"type":{"names":["Object","String"]},"name":"iterable"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":0,"description":"start index","name":"start"},{"type":{"names":["Number"]},"optional":true,"defaultvalue":"iterable.length","description":"end index","name":"end"}],"returns":[{"type":{"names":["Array"]}}],"name":"toArray","longname":"Util.toArray","kind":"function","memberof":"Util","scope":"static","$longname":"Util.toArray","$kind":"method","id":1339,"neoClassName":"Neo.core.Util"}]}